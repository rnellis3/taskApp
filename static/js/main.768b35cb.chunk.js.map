{"version":3,"sources":["Overview.js","reportWebVitals.js","App.js","App2.js","index.js"],"names":["Overview","list","this","props","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App2","handleChange","e","setState","task","text","target","value","onSubmitTask","preventDefault","tasks","state","concat","viewState","bind","console","log","onSubmit","htmlFor","onChange","type","id","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAYeA,E,4JARf,WAAS,IACEC,EAAQC,KAAKC,MAAbF,KACP,OACI,8BAAMA,Q,GAJSG,IAAMC,WCSdC,GCTGF,IAAMC,UDHA,SAAAE,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QEiDCQ,E,kDArDb,aAAe,IAAD,8BACZ,gBASFC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZC,KAAO,CACLC,KAAMH,EAAEI,OAAOC,UAbP,EAkBdC,aAAe,SAACN,GACdA,EAAEO,iBACF,EAAKN,SAAS,CACZO,MAAO,EAAKC,MAAMD,MAAME,OAAO,EAAKD,MAAMP,MAC1CA,KAAM,CAAEC,KAAM,OAnBhB,EAAKM,MAAQ,CACXP,KAAM,CAAEC,KAAM,IACdK,MAAO,IAET,EAAKG,UAAY,EAAKA,UAAUC,KAAf,gBAPL,E,6CA0Bd,WACEC,QAAQC,IAAI7B,KAAKwB,MAAMD,S,oBAGzB,WAAU,IAAD,EACiBvB,KAAKwB,MADtB,EACCP,KADD,EACOM,MAEd,OACE,gCACE,uBAAMO,SAAU9B,KAAKqB,aAArB,UACE,uBAAOU,QAAQ,YAAf,wBACA,uBACRC,SAAUhC,KAAKc,aACfM,MAAOpB,KAAKwB,MAAMP,KAAKC,KACvBe,KAAK,OACLC,GAAG,cAEK,wBAAQD,KAAK,SAAb,yBAIF,wBAAQE,QAASnC,KAAK0B,UAAtB,0B,GAhDWvB,aCKnBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BpC,M","file":"static/js/main.768b35cb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//handles the task rendering\r\nclass Overview extends React.Component {\r\nrender(){\r\n    const {list} = this.props\r\n    return (\r\n        <div>{list}</div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Overview","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport Overview from './Overview'\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      task: '',\n      taskList: []\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.viewState = this.viewState.bind(this)\n  }\n\n  handleChange(event){\n    event.preventDefault()\n    const inputValue = document.getElementById('textValue').value\n    console.log(inputValue)\n    // const {value} = event.target\n    this.setState({\n      taskList: [...this.state.taskList, inputValue]\n    })\n    console.log('click')\n  }\n\n  viewState(){\n    console.log(this.state.taskList)\n  }\n\n\n  render(){\n    const tasks = this.state.taskList.map(task => <Overview list={task}/>)\n    return (\n      <div>\n        <h1>Hello there</h1>\n        <form onSubmit={this.handleChange}>\n        <input\n        type='text'\n        name='task'\n        placeholder=\"enter task\"\n        id='textValue'\n        />\n        <button>Submit</button>\n\n        </form>\n\n        <button onClick={this.viewState}>State</button>\n        {/* <button onClick={this.handleChange}>Enter Task</button> */}\n\n        {tasks}\n\n      {/* <p>Your name: {this.state.taskList}</p> */}\n      </div>\n\n      //handles the input\n    );\n  }\n\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\n\r\nclass App2 extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      task: { text: ''},\r\n      tasks: [],\r\n    };\r\n    this.viewState = this.viewState.bind(this)\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      task : {\r\n        text: e.target.value,\r\n      }\r\n    });\r\n  };\r\n\r\n  onSubmitTask = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      tasks: this.state.tasks.concat(this.state.task),\r\n      task: { text: '' },\r\n    });\r\n  };\r\n\r\n  viewState(){\r\n    console.log(this.state.tasks)\r\n  }\r\n\r\n  render() {\r\n    const { task, tasks } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmitTask}>\r\n          <label htmlFor=\"taskInput\">Enter task</label>\r\n          <input\r\n  onChange={this.handleChange}\r\n  value={this.state.task.text}\r\n  type=\"text\"\r\n  id=\"taskInput\"\r\n/>\r\n          <button type=\"submit\">\r\n            Add Task\r\n          </button>\r\n        </form>\r\n        <button onClick={this.viewState}>State</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App2;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport App2 from './App2'\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <App2 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}